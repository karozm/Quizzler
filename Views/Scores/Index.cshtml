@model IEnumerable<MvcPracownicy.Models.Score>

@{
    ViewData["Title"] = "Quiz Scores";
    Layout = "_AuthenticatedLayout";
}

<div class="score-page-container" style="margin-top: 450px;">
    <div class="quiz-header">
        <h1>Wyniki</h1>
    </div>

    <div class="scrollable-results" style="margin-bottom: 40px;">
        <table>
            <thead>
                <tr>
                    <th>Użytkownik</th>
                    <th>Quiz</th>
                    <th>Punkty</th>
                    <th>Maks. Punkty</th>
                    <th>Procent</th>
                    <th>Data</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var score in Model)
                {
                    <tr>
                        <td>@score.User.LoginName</td>
                        <td>@score.Quiz.Title</td>
                        <td>@score.Points</td>
                        <td>@score.MaxPoints</td>
                        <td>@Math.Round((double)score.Points / score.MaxPoints * 100, 2)%</td>
                        <td>@score.CompletedAt.ToString("dd.MM.yyyy HH:mm")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div>
        <label for="quizSelect" style="color:#FFFDD0; font-weight:800;">Wybierz quiz:</label>
        <select id="quizSelect" style="margin: 10px 0 20px 0; padding: 5px;">
            <option value="all">Wszystkie</option>
            @foreach (var quizTitle in Model.Select(s => s.Quiz.Title).Distinct())
            {
                <option value="@quizTitle">@quizTitle</option>
            }
        </select>
    </div>

    <canvas id="scoreChart" style="max-width: 100%; height: 400px;"></canvas>
</div>

<style>
    .score-page-container {
        padding: 2rem;
        max-width: 1000px;
        margin: 100px auto 0 auto;
        box-sizing: border-box;
        color: #FFFDD0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }
    /* pozostałe style jak wcześniej */
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const allScores = [
            @foreach (var score in Model)
            {
                var percent = Math.Round((double)score.Points / score.MaxPoints * 100, 2);
                <text>{
                    user: "@score.User.LoginName",
                    quiz: "@score.Quiz.Title",
                    percent: @percent
                },</text>
            }
        ];

        const ctx = document.getElementById('scoreChart').getContext('2d');  // <-- TO TU!

        function getFilteredData(quizFilter) {
            let filtered = quizFilter === 'all' ? allScores : allScores.filter(s => s.quiz === quizFilter);

            const userGroups = {};
            filtered.forEach(s => {
                if (!userGroups[s.user]) {
                    userGroups[s.user] = [];
                }
                userGroups[s.user].push(s.percent);
            });

            const userLabels = Object.keys(userGroups);
            const userAverages = userLabels.map(user => {
                const scores = userGroups[user];
                const avg = scores.reduce((a, b) => a + b, 0) / scores.length;
                return Math.round(avg * 100) / 100;
            });

            const overallAvg = filtered.length > 0
                ? Math.round(filtered.reduce((a, s) => a + s.percent, 0) / filtered.length * 100) / 100
                : 0;

            userLabels.push('Średnia ogólna');
            userAverages.push(overallAvg);

            return {
                labels: userLabels,
                datasets: [{
                    label: 'Średni procentowy wynik (%)',
                    data: userAverages,
                    backgroundColor: 'rgb(255, 190, 239)',
                    borderColor: 'rgb(255, 107, 176)',
                    borderWidth: 1
                }]
            };
        }

        const config = {
            type: 'bar',
            data: getFilteredData('all'),
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100,
                        ticks: {
                            color: '#FFFDD0'
                        },
                        grid: {
                            color: '#FFFDD0'
                        },
                        title: {
                            display: true,
                            text: 'Wynik procentowy',
                            color: '#FFFDD0'
                        }
                    },
                    x: {
                        ticks: {
                            display: false
                        },
                        grid: {
                            color: '#FFFDD0'
                        },
                        title: {
                            display: false
                        }
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            color: '#FFFDD0'
                        }
                    }
                },
                font: {
                    family: '"Segoe UI", Tahoma, Geneva, Verdana, sans-serif'
                }
            }
        };

        const scoreChart = new Chart(ctx, config);

        document.getElementById('quizSelect').addEventListener('change', function () {
            const selectedQuiz = this.value;
            const newData = getFilteredData(selectedQuiz);
            scoreChart.data = newData;
            scoreChart.update();
        });
    </script>
}


<style>
    .score-page-container {
        padding: 2rem;
        max-width: 1000px;
        margin: 100px auto 0 auto;
        box-sizing: border-box;
    }

    .quiz-header {
        margin-bottom: 1rem;
    }

    .scrollable-results {
        max-height: 300px;
        overflow-y: auto;
        border: 1px solid rgba(61, 52, 66, 0.88);
        border-radius: 8px;
    }

    .scrollable-results table {
        width: 100%;
        border-collapse: collapse;
        color: #FFFDD0;
    }

    .scrollable-results th,
    .scrollable-results td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid rgba(134, 111, 139, 0.91);
    }

    .scrollable-results th {
        background-color: rgb(49, 13, 75);
        font-weight: 600;
        position: sticky;
        top: 0;
        z-index: 1;
        backdrop-filter: blur(5px);
        color: #FFFDD0;
    }

    .scrollable-results td {
        background-color: rgba(95, 81, 110, 0.41); 
        overflow: hidden;
        backdrop-filter: blur(10px);
    }

    .scrollable-results tr:hover td {
        background-color: rgba(255, 255, 255, 0.07);
    }
</style>

