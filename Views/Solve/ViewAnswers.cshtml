@model MvcPracownicy.Models.Quiz
@{
    ViewData["Title"] = "Odpowiedzi Quizu";
    Layout = "_AuthenticatedLayout";
    var userAnswers = (Dictionary<string, string[]>)ViewData["UserAnswers"];
}

<div class="scroll-window">
    @foreach (var question in Model.Questions)
    {
        <div class="question-block">
            <div class="question-text">@question.Content</div>
            <div class="answers-container">
                @foreach (var answer in question.Answers)
                {
                    string userAnswerId = userAnswers.ContainsKey($"{question.Id}") ? userAnswers[$"{question.Id}"][0] : "";
                    bool isUserAnswer = userAnswerId == answer.Id.ToString();
                    string answerClass = "";

                    if (answer.IsCorrect)
                    {
                        answerClass = "answer-correct";
                    }
                    else if (isUserAnswer && !answer.IsCorrect)
                    {
                        answerClass = "answer-wrong";
                    }

                    <div class="answer-item @answerClass">
                        @answer.Content
                    </div>
                }
            </div>
        </div>
    }
</div>

<div class="return-button-container">
    <a asp-action="Index" class="return-button">
        <span class="material-icons">arrow_back</span> Powrót
    </a>
</div>

<style>
    /* Scrollowalne okno - większe i szersze */
    .scroll-window {
        max-height: 400px;
        overflow-y: auto;
        padding: 16px;
        margin: 180px auto;
        max-width: 900px;
        margin-bottom: 40px;
        border: 2px solidrgb(192, 182, 206); /* ciemny fiolet */
        border-radius: 10px;
        background-color:rgba(82, 56, 116, 0.12);
        backdrop-filter: blur(10px); /* jasny fiolet */
        box-shadow: 0 0 15px rgba(106, 75, 154, 0.3);
    }

    /* Jeden prostokąt na pytanie + odpowiedzi */
    .question-block {
        background-color:rgba(124, 97, 168, 0.72); /* fiolet */
        color: #f3e5f5; /* jasny fiolet na tekst */
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 18px;
        box-shadow: 0 3px 8px rgba(126, 87, 194, 0.4);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .question-text {
        font-weight: 600;
        font-size: 1.2rem;
        margin-bottom: 14px;
    }

    .answers-container {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .answer-item {
        background-color:rgb(91, 78, 124); /* jaśniejszy fiolet */
        padding: 12px 16px;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

    /* Kolory dla poprawnych i błędnych odpowiedzi */
    .answer-correct {
        background-color: #b39ddb; /* jasny fiolet - zielona nuta */
        color: #2e7d32; /* ciemna zieleń */
        font-weight: 700;
    }

    .answer-wrong {
        background-color:rgb(241, 214, 245); /* jasny fiolet - czerwony róż */
        color: #c62828; /* ciemna czerwień */
        font-weight: 700;
    }

    /* Kontener przycisku powrotu */
    .return-button-container {
        max-width: 900px;
        margin: 0 auto 40px auto;
        text-align: center;
    }

    /* Styl przycisku */
    .return-button {
        display: inline-flex;
        align-items: center;
        padding: 10px 30px;
        gap: 0.4em; 
        background-color: #6a4b9a;
        border: 2px solid rgba(255, 255, 255, 0.78); 
        color: #f5f0fa;
        font-weight: 600;
        font-size: 1.1rem;
        border-radius: 25px;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
        user-select: none;
    }

    .return-button:hover,
    .return-button:focus {
        background-color: #9c84d8;
        color: #fff;
        outline: none;
    }
</style>

